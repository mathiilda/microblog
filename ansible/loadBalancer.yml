---
- name: loadBalancer
  hosts: loadBalancer
  become: true
  become_method: sudo
  remote_user: deploy

  vars:
    ansible_python_interpreter: /usr/bin/python3

  tasks:
    - name: Install packages
      apt:
        name:
          - nginx
          - python-certbot-nginx
        state: present

    - name: Check if certificate already exists.
      stat:
        path: /etc/letsencrypt/live/mbweb.tech/cert.pem
      register: letsencrypt_cert

    - debug: msg="{{ letsencrypt_cert.stat.exists }}"

    - name: Stop services to allow certbot to generate a cert.
      command: service nginx stop
      when: not letsencrypt_cert.stat.exists

    - name: Generate new certificate if one doesn't exist.
      shell: "certbot certonly --standalone --noninteractive --expand --agree-tos --email mabw19@student.bth.se -d mbweb.tech -d www.mbweb.tech"
      when: not letsencrypt_cert.stat.exists

    - name: Remove default conf
      file:
        state: absent
        path: /etc/nginx/sites-enabled/default

    - name: Copy files from local to VM, nginx.conf.j2
      template:
        src: ~/dbwebb/nginx-conf/nginx.conf.j2
        dest: /etc/nginx/nginx.conf

    - name: Copy files from local to VM, load-balancer.conf.j2
      template:
        src: ~/dbwebb/nginx-conf/load-balancer.conf.j2
        dest: /etc/nginx/sites-available/load-balancer.conf

    - name: Create symbolic link
      file:
        state: link
        src: /etc/nginx/sites-available/load-balancer.conf
        path: /etc/nginx/sites-enabled/load-balancer.conf

    - name: Start nginx
      service:
        name: nginx
        state: started

    - name: Restart nginx
      service:
        name: nginx
        state: restarted
        enabled: yes
